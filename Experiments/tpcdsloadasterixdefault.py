import requests

url = "http://localhost:19002/query/service"

headers = {
    "Content-Type": "application/x-www-form-urlencoded"
}

# Define data for the query
data = {
    "statement": '''// Create the tpcds dataverse
 
drop dataverse tpcds if exists;
 
create dataverse tpcds;
 
use tpcds;
 
 
 
// Create the types for each dataset
 
create type call_center as open {id: uuid};
 
create type catalog_page as open {id: uuid};
 
create type catalog_returns as open {id: uuid};
 
create type catalog_sales as open {id: uuid};
 
create type customer as open {id: uuid};
 
create type customer_address as open {id: uuid};
 
create type customer_demographics as open {id: uuid};
 
create type date_dim as open {id: uuid};
 
create type household_demographics as open {id: uuid};
 
create type income_band as open {id: uuid};
 
create type inventory as open {id: uuid};
 
create type item as open {id: uuid};
 
create type promotion as open {id: uuid};
 
create type reason as open {id: uuid};
 
create type ship_mode as open {id: uuid};
 
create type store as open {id: uuid};
 
create type store_returns as open {id: uuid};
 
create type store_sales as open {id: uuid};
 
create type time_dim as open {id: uuid};
 
create type warehouse as open {id: uuid};
 
create type web_page as open {id: uuid};
 
create type web_returns as open {id: uuid};
 
create type web_sales as open {id: uuid};
 
create type web_site as open {id: uuid};
 
 
 
// Create the datasets
 
create dataset call_center(call_center) primary key id autogenerated;
 
create dataset catalog_page(catalog_page) primary key id autogenerated;
 
create dataset catalog_returns(catalog_returns) primary key id autogenerated;
 
create dataset catalog_sales(catalog_sales) primary key id autogenerated;
 
create dataset customer(customer) primary key id autogenerated;
 
create dataset customer_address(customer_address) primary key id autogenerated;
 
create dataset customer_demographics(customer_demographics) primary key id autogenerated;
 
create dataset date_dim(date_dim) primary key id autogenerated;
 
create dataset household_demographics(household_demographics) primary key id autogenerated;
 
create dataset income_band(income_band) primary key id autogenerated;
 
create dataset inventory(inventory) primary key id autogenerated;
 
create dataset item(item) primary key id autogenerated;
 
create dataset promotion(promotion) primary key id autogenerated;
 
create dataset reason(reason) primary key id autogenerated;
 
create dataset ship_mode(ship_mode) primary key id autogenerated;
 
create dataset store(store) primary key id autogenerated;
 
create dataset store_returns(store_returns) primary key id autogenerated;
 
create dataset store_sales(store_sales) primary key id autogenerated;
 
create dataset time_dim(time_dim) primary key id autogenerated;
 
create dataset warehouse(warehouse) primary key id autogenerated;
 
create dataset web_page(web_page) primary key id autogenerated;
 
create dataset web_returns(web_returns) primary key id autogenerated;
 
create dataset web_sales(web_sales) primary key id autogenerated;
 
create dataset web_site(web_site) primary key id autogenerated;
 
 
 
// Generate the TPC-DS data for each dataset for the specified scale factor
 
set `import-private-functions` `true`;
 
insert into call_center(select value data from tpcds_datagen("call_center", 1) as data);
 
insert into catalog_page(select value data from tpcds_datagen("catalog_page", 1) as data);
 
insert into catalog_returns(select value data from tpcds_datagen("catalog_returns", 1) as data);
 
insert into catalog_sales(select value data from tpcds_datagen("catalog_sales", 1) as data);
 
insert into customer(select value data from tpcds_datagen("customer", 1) as data);
 
insert into customer_address(select value data from tpcds_datagen("customer_address", 1) as data);
 
insert into customer_demographics(select value data from tpcds_datagen("customer_demographics", 1) as data);
 
insert into date_dim(select value data from tpcds_datagen("date_dim", 1) as data);
 
insert into household_demographics(select value data from tpcds_datagen("household_demographics", 1) as data);
 
insert into income_band(select value data from tpcds_datagen("income_band", 1) as data);
 
insert into inventory(select value data from tpcds_datagen("inventory", 1) as data);
 
insert into item(select value data from tpcds_datagen("item", 1) as data);
 
insert into promotion(select value data from tpcds_datagen("promotion", 1) as data);
 
insert into reason(select value data from tpcds_datagen("reason", 1) as data);
 
insert into ship_mode(select value data from tpcds_datagen("ship_mode", 1) as data);
 
insert into store(select value data from tpcds_datagen("store", 1) as data);
 
insert into store_returns(select value data from tpcds_datagen("store_returns", 1) as data);
 
insert into store_sales(select value data from tpcds_datagen("store_sales", 1) as data);
 
insert into time_dim(select value data from tpcds_datagen("time_dim", 1) as data);
 
insert into warehouse(select value data from tpcds_datagen("warehouse", 1) as data);
 
insert into web_page(select value data from tpcds_datagen("web_page", 1) as data);
 
insert into web_returns(select value data from tpcds_datagen("web_returns", 1) as data);
 
insert into web_sales(select value data from tpcds_datagen("web_sales", 1) as data);
 
insert into web_site(select value data from tpcds_datagen("web_site", 1) as data);''',
    "pretty": "true",
    "client_context_id": "xyz"
}

response = requests.post(url, headers=headers, data=data)
print(response.text)
